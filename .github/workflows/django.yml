name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      max-parallel: 4
      matrix:
        python-version: [ '3.12', '3.13' ]
        test-type: [ 'unit', 'integration' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        shell: bash
        run: poetry install --no-interaction
      - name: Install Firefox
        uses: browser-actions/setup-firefox@latest
        if: ${{ matrix.test-type == 'integration' }}

      - name: Run Tests
        run: |
          poetry run python manage.py collectstatic --settings=rechnung.test_settings --no-input
          poetry run coverage run manage.py test --settings=rechnung.test_settings
        if: ${{ matrix.test-type == 'unit' }}
      - name: Run Tests
        run: |
          poetry run python manage.py collectstatic --settings=rechnung.test_settings --no-input
          poetry run coverage run manage.py test -k Integration --settings=rechnung.test_settings
        if: ${{ matrix.test-type == 'integration' }}

      - name: Create Report
        run: |
          poetry run coverage json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Segelzwerg/rechnung
